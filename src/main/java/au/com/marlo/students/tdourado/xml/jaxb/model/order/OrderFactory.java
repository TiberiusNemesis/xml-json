//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference
// Implementation, v2.3.2
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2022.05.02 at 03:06:16 PM BRT
//

package au.com.marlo.students.tdourado.xml.jaxb.model.order;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

/**
 * This object contains factory methods for each Java content interface and Java element interface
 * generated in the au.com.marlo.training.order package.
 *
 * <p>An ObjectFactory allows you to programatically construct new instances of the Java
 * representation for XML content. The Java representation of XML content can consist of schema
 * derived interfaces and classes representing the binding of schema type definitions, element
 * declarations and model groups. Factory methods for each of these are provided in this class.
 */
@XmlRegistry
public class OrderFactory {

  private static final QName _Order_QNAME =
      new QName("http://www.marlo.com.au/training/order", "order");

  /**
   * Create a new ObjectFactory that can be used to create new instances of schema derived classes
   * for package: au.com.marlo.training.order
   */
  public OrderFactory() {}

  /** Create an instance of {@link Order } */
  public Order createOrder() {
    return new Order();
  }

  /**
   * Create an instance of {@link JAXBElement }{@code <}{@link Order }{@code >}
   *
   * @param value Java instance representing xml element's value.
   * @return the new instance of {@link JAXBElement }{@code <}{@link Order }{@code >}
   */
  @XmlElementDecl(namespace = "http://www.marlo.com.au/training/order", name = "order")
  public JAXBElement<Order> createOrder(Order value) {
    return new JAXBElement<Order>(_Order_QNAME, Order.class, null, value);
  }
}
